package generator.content;

import com.squareup.javapoet.*;
import config.Common;
import config.Package;
import lombok.extern.slf4j.Slf4j;

import javax.lang.model.element.Modifier;
import java.util.ArrayList;
import java.util.List;

@Slf4j
public class ServiceGenerator {
    public ServiceGenerator() {
        Common.writeToJavaFile(Package.AUTOGENERATED_SERVICE, TypeSpec
                .interfaceBuilder("ServiceTemplate")
                .addTypeVariable(TypeVariableName.get("T"))
                .addTypeVariable(TypeVariableName.get("E"))
                .addModifiers(Modifier.PUBLIC)
                .addMethods(generateMethods())
                .build());
    }

    private Iterable<MethodSpec> generateMethods() {
        List<MethodSpec> methodsList = new ArrayList<>();
        methodsList.add(MethodSpec
                .methodBuilder("get")
                .addModifiers(Modifier.PUBLIC, Modifier.ABSTRACT)
                .returns(ParameterizedTypeName.get(ClassName.get(List.class), TypeVariableName.get("T")))
                .build());
        methodsList.add(MethodSpec
                .methodBuilder("get")
                .addModifiers(Modifier.PUBLIC, Modifier.ABSTRACT)
                .returns(TypeVariableName.get("T"))
                .addParameter(TypeVariableName.get("E"), "id")
                .build());
        methodsList.add(MethodSpec
                .methodBuilder("add")
                .addModifiers(Modifier.PUBLIC, Modifier.ABSTRACT)
                .returns(void.class)
                .addParameter(TypeVariableName.get("T"), "t")
                .build());
        methodsList.add(MethodSpec
                .methodBuilder("update")
                .addModifiers(Modifier.PUBLIC, Modifier.ABSTRACT)
                .returns(void.class)
                .addParameter(TypeVariableName.get("E"), "id")
                .addParameter(TypeVariableName.get("T"), "t")
                .build());
        methodsList.add(MethodSpec
                .methodBuilder("delete")
                .addModifiers(Modifier.PUBLIC, Modifier.ABSTRACT)
                .returns(void.class)
                .addParameter(TypeVariableName.get("E"), "id")
                .build());
        return methodsList;
    }
}