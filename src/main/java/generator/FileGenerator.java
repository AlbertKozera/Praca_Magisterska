package generator;

import config.Path;
import dto.ColumnMetadata;
import lombok.extern.slf4j.Slf4j;

import java.io.File;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Map;

@Slf4j
public class FileGenerator {
    private final Map<String, LinkedList<ColumnMetadata>> metadata;
    private static final String JAVA_EXTENSION = ".java";

    public FileGenerator(Map<String, LinkedList<ColumnMetadata>> metadata) {
        this.metadata = metadata;
    }

    public void generateRESTWebServicesFiles() {
        generateConfig();
        generateDto();
        generateService();
        generateController();
    }

    public void generateConfig() {
        createProjectFile(Path.AUTOGENERATED_CONFIG, "DbCon" + JAVA_EXTENSION);
    }

    public void generateController() {
        metadata.forEach((t, c) ->
                createProjectFile(Path.AUTOGENERATED_CONTROLLER, capitalizeFirstLetter(t) + "Controller" + JAVA_EXTENSION));
    }

    public void generateDto() {
        metadata.forEach((t, c) ->
                createProjectFile(Path.AUTOGENERATED_DTO, capitalizeFirstLetter(t) + JAVA_EXTENSION));
    }

    public void generateService() {
        metadata.forEach((t, c) ->
                createProjectFile(Path.AUTOGENERATED_SERVICE_IMPL, capitalizeFirstLetter(t) + "Service" + JAVA_EXTENSION));
        createProjectFile(Path.AUTOGENERATED_SERVICE, "ServiceTemplate" + JAVA_EXTENSION);
    }

    private void createProjectFile(String path, String fileName) {
        try {
            String absolutePath = Path.PROJECT + path;
            var file = new File(absolutePath + fileName);
            if (file.createNewFile())
                log.info("In directory " + absolutePath + " file " + file.getName() + " has been created");
        } catch (IOException e) {
            log.error(e.getMessage());
            e.printStackTrace();
        }
    }

    private String capitalizeFirstLetter(String str) {
        return str.substring(0, 1).toUpperCase() + str.substring(1).toLowerCase();
    }
}
