package service;

import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;
import config.Extension;
import config.Path;
import dto.Config;
import dto.UriContainer;
import lombok.extern.slf4j.Slf4j;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

@Slf4j
public class LoaderService {
    public static Config loadConfigFile() {
        try (var jsonReader = new JsonReader(Files.newBufferedReader(Paths.get(Path.PROJECT_RESOURCES + "config" + Extension.JSON)))) {
            return new Gson().fromJson(jsonReader, Config.class);
        } catch (IOException e) {
            log.error(e.getMessage());
            return Config.builder().build();
        }
    }

    public static UriContainer loadUriContainerFile() {
        try (var jsonReader = new JsonReader(Files.newBufferedReader(Paths.get(Path.AUTOGENERATED + "URI container" + Extension.JSON)))) {
            return new Gson().fromJson(jsonReader, UriContainer.class);
        } catch (IOException e) {
            log.error(e.getMessage());
            return UriContainer.builder().build();
        }
    }
}




